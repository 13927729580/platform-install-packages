#!/bin/bash
ldconfig
# register service
if [ "$1" = "configure" ];
then
    update-rc.d kaltura-sphinx defaults
fi

chown -R kaltura:kaltura /opt/kaltura/sphinx-2.2.1/var/lib/sphinx /opt/kaltura/sphinx-2.2.1/var/log/sphinx /opt/kaltura/sphinx-2.2.1/var/run/sphinx

KALTURA_FUNCTIONS_RC=`dirname $0`/kaltura-functions.rc
if [ ! -r "$KALTURA_FUNCTIONS_RC" ];then
	OUT="Could not find $KALTURA_FUNCTIONS_RC so, exiting.."
	echo $OUT
	exit 3
fi
. $KALTURA_FUNCTIONS_RC
if ! rpm -q kaltura-sphinx;then
	echo -e "${BRIGHT_RED}ERROR: First install kaltura-sphinx.${NORMAL}"
	exit 0
fi
if [ -r $CONSENT_FILE ];then
	. $CONSENT_FILE
fi
. $CONSENT_FILE
RC_FILE=/etc/kaltura.d/system.ini
if [ ! -r "$RC_FILE" ];then
	echo -e "${BRIGHT_RED}ERROR: could not find $RC_FILE so, exiting..${NORMAL}"
	exit 2
fi
. $RC_FILE
#if [ -r "$APP_DIR/configurations/sphinx_schema_update" ];then
#	`dirname $0`/kaltura-sphinx-schema-update.sh
#	exit $?
#fi
ln -sf $BASE_DIR/app/configurations/logrotate/kaltura_populate /etc/logrotate.d/
trap 'my_trap_handler "${LINENO}" ${$?}' ERR
send_install_becon `basename $0` $ZONE install_start 0 
mkdir -p $LOG_DIR/sphinx/data $APP_DIR/cache//sphinx
chown $OS_KALTURA_USER.$OS_KALTURA_USER $APP_DIR/cache/sphinx $LOG_DIR/sphinx/data $BASE_DIR/sphinx
echo "sphinxServer = $SPHINX_HOST" > /opt/kaltura/app/configurations/sphinx/populate/`hostname`.ini
/etc/init.d/kaltura-sphinx restart >/dev/null 2>&1
/etc/init.d/kaltura-populate restart >/dev/null 2>&1
ln -sf $BASE_DIR/app/configurations/monit/monit.avail/sphinx.rc $BASE_DIR/app/configurations/monit/monit.d/enabled.sphinx.rc
/etc/init.d/kaltura-monit stop >> /dev/null 2>&1
/etc/init.d/kaltura-monit start
send_install_becon `basename $0` $ZONE install_success 0
